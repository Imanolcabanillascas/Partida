/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import com.mysql.jdbc.PreparedStatement;
import java.sql.Connection;
import conexion.conexion;
import controlador.Ctrl_Libro;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import javax.swing.JOptionPane;
import modelo.Libro;

/**
 *
 * @author LENOVO
 */
public class NewJInternalFrame_GestLibro extends javax.swing.JInternalFrame {

    private int idLibro;

    /**
     * Creates new form NewJInternalFrame_GestLibro
     */
    public NewJInternalFrame_GestLibro() {
        initComponents();
        this.setSize(650, 400);
        this.setTitle("Gestionar Libros");
        this.CargarTablaLibros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_libros = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btn_actualizar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        txt_anioLibro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable_libros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_libros);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 350, 250));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 51));
        jLabel2.setText("ADMINISTRAR LIBROS");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        btn_actualizar.setBackground(new java.awt.Color(0, 204, 0));
        btn_actualizar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_actualizar.setText("Actualizar");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 170, 100, 30));

        btn_eliminar.setBackground(new java.awt.Color(153, 0, 0));
        btn_eliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 100, 30));

        txt_anioLibro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_anioLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_anioLibroActionPerformed(evt);
            }
        });
        getContentPane().add(txt_anioLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, 192, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Año/Libro:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/circle.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 320, 40, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/wall2.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        if (!txt_anioLibro.getText().isEmpty()) {
            Object[] options = {"Sí", "No"};
            int opcion = JOptionPane.showOptionDialog(
                    null,
                    "¿Estás seguro de eliminar el libro?",
                    "Confirmar eliminación",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]
            );

            if (opcion == JOptionPane.YES_OPTION) {
                Libro libro = new Libro();
                Ctrl_Libro controlLibro = new Ctrl_Libro();

                libro.setAnio(txt_anioLibro.getText().trim());
                if (!controlLibro.eliminar(idLibro)) {
                    JOptionPane.showMessageDialog(null, "Libro Eliminado");
                    txt_anioLibro.setText("");
                    this.CargarTablaLibros();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al Eliminar Libro");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un Libro");
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void txt_anioLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_anioLibroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_anioLibroActionPerformed

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        if (!txt_anioLibro.getText().isEmpty()) {
            Libro libro = new Libro();
            Ctrl_Libro controlCategoria = new Ctrl_Libro();

            libro.setAnio(txt_anioLibro.getText().trim());
            if (controlCategoria.actualizar(libro, idLibro)) {
                JOptionPane.showMessageDialog(null, "Libro Actualizado");
                txt_anioLibro.setText("");
                this.CargarTablaLibros();
            } else {
                JOptionPane.showMessageDialog(null, "Error al actualizar Libro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un Libro segun el año Correspondiente");
        }
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.CargarTablaLibros();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_libros;
    private javax.swing.JTextField txt_anioLibro;
    // End of variables declaration//GEN-END:variables

    private void CargarTablaLibros() {
        Connection con = conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select id_Libro,anio from libro";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            NewJInternalFrame_GestLibro.jTable_libros = new JTable(model);
            NewJInternalFrame_GestLibro.jScrollPane1.setViewportView(NewJInternalFrame_GestLibro.jTable_libros);
            model.addColumn(" # ");
            model.addColumn("Año-Libro");
            while (rs.next()) {
                Object fila[] = new Object[2];
                for (int i = 0; i < 2; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {

        }
        jTable_libros.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_libros.rowAtPoint(e.getPoint());
                int columna_point = 0;
                if (fila_point > -1) {
                    idLibro = (int) model.getValueAt(fila_point, columna_point);
                    EnviardatosLibro(idLibro);
                }

            }

        }
        );
    }

    private void EnviardatosLibro(int idLibro) {
        try {
            Connection cn = conexion.conectar();
            PreparedStatement ps = (PreparedStatement) cn.prepareStatement(
                    "select * from libro where id_Libro = '" + idLibro + "'");
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                txt_anioLibro.setText(rs.getString("anio"));
            }
        } catch (Exception e) {
            System.err.println("Erro cargar Libros" + e);
        }
    }

}
